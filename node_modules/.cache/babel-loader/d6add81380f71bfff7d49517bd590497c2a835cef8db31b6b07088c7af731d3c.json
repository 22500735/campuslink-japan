{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/df/Desktop/eta/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import styled from'styled-components';import{AnimatePresence}from'framer-motion';// Components\nimport SplashScreen from'./components/SplashScreen';import LoginScreen from'./components/LoginScreen';import StudentVerification from'./components/StudentVerification';import MainApp from'./components/MainApp';// Global Styles\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AppContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100vh;\\n  overflow: hidden;\\n  background: linear-gradient(135deg, #00A86B 0%, #20B2AA 100%);\\n  position: relative;\\n\"])));function App(){const[currentScreen,setCurrentScreen]=useState('splash');const[user,setUser]=useState(null);useEffect(()=>{// Check if user is already logged in\nconst savedUser=localStorage.getItem('campuslink_user');if(savedUser){setUser(JSON.parse(savedUser));setCurrentScreen('main');}else{// Show splash screen for 3 seconds\nconst timer=setTimeout(()=>{setCurrentScreen('login');},3000);return()=>clearTimeout(timer);}},[]);const handleLogin=userData=>{setUser(userData);localStorage.setItem('campuslink_user',JSON.stringify(userData));setCurrentScreen('main');};const handleLogout=()=>{setUser(null);localStorage.removeItem('campuslink_user');setCurrentScreen('login');};const handleVerificationComplete=userData=>{handleLogin(userData);};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(AppContainer,{children:/*#__PURE__*/_jsxs(AnimatePresence,{mode:\"wait\",children:[currentScreen==='splash'&&/*#__PURE__*/_jsx(SplashScreen,{},\"splash\"),currentScreen==='login'&&/*#__PURE__*/_jsx(LoginScreen,{onLogin:handleLogin,onNeedVerification:()=>setCurrentScreen('verification')},\"login\"),currentScreen==='verification'&&/*#__PURE__*/_jsx(StudentVerification,{onComplete:handleVerificationComplete,onBack:()=>setCurrentScreen('login')},\"verification\"),currentScreen==='main'&&user&&/*#__PURE__*/_jsx(MainApp,{user:user,onLogout:handleLogout},\"main\")]})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","styled","AnimatePresence","SplashScreen","LoginScreen","StudentVerification","MainApp","jsx","_jsx","jsxs","_jsxs","AppContainer","div","_templateObject","_taggedTemplateLiteral","App","currentScreen","setCurrentScreen","user","setUser","savedUser","localStorage","getItem","JSON","parse","timer","setTimeout","clearTimeout","handleLogin","userData","setItem","stringify","handleLogout","removeItem","handleVerificationComplete","children","mode","onLogin","onNeedVerification","onComplete","onBack","onLogout"],"sources":["/Users/df/Desktop/eta/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AnimatePresence } from 'framer-motion';\n\n// Components\nimport SplashScreen from './components/SplashScreen';\nimport LoginScreen from './components/LoginScreen';\nimport StudentVerification from './components/StudentVerification';\nimport MainApp from './components/MainApp';\n\n// Global Styles\nconst AppContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  background: linear-gradient(135deg, #00A86B 0%, #20B2AA 100%);\n  position: relative;\n`;\n\nfunction App() {\n  const [currentScreen, setCurrentScreen] = useState('splash');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const savedUser = localStorage.getItem('campuslink_user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n      setCurrentScreen('main');\n    } else {\n      // Show splash screen for 3 seconds\n      const timer = setTimeout(() => {\n        setCurrentScreen('login');\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  const handleLogin = (userData) => {\n    setUser(userData);\n    localStorage.setItem('campuslink_user', JSON.stringify(userData));\n    setCurrentScreen('main');\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('campuslink_user');\n    setCurrentScreen('login');\n  };\n\n  const handleVerificationComplete = (userData) => {\n    handleLogin(userData);\n  };\n\n  return (\n    <Router>\n      <AppContainer>\n        <AnimatePresence mode=\"wait\">\n          {currentScreen === 'splash' && (\n            <SplashScreen key=\"splash\" />\n          )}\n          {currentScreen === 'login' && (\n            <LoginScreen \n              key=\"login\" \n              onLogin={handleLogin}\n              onNeedVerification={() => setCurrentScreen('verification')}\n            />\n          )}\n          {currentScreen === 'verification' && (\n            <StudentVerification \n              key=\"verification\"\n              onComplete={handleVerificationComplete}\n              onBack={() => setCurrentScreen('login')}\n            />\n          )}\n          {currentScreen === 'main' && user && (\n            <MainApp \n              key=\"main\" \n              user={user} \n              onLogout={handleLogout}\n            />\n          )}\n        </AnimatePresence>\n      </AppContainer>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}